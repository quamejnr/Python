# from ipaddress import ip_address
from contextlib import suppress
from cryptography.fernet import Fernet
# import requests
# print(Fernet.generate_key())
# ip_address = "24.48.0.1"
# response = requests.get(f"http://ip-api.com/json/{ip_address}").json()

# country = response['country']
# print(country)
# from motor.motor_tornado import MotorClient

# client = MotorClient()

# client.close()
import json
import jwt

variable_token = "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhdXRoLXRlc3QubXBoYXJtYS5jb20iLCJzdWIiOiI1MSIsImF1ZCI6IjA5MTc1NiIsImV4cCI6MTUzMjc2MzgwMywiaWF0IjoxNTMyNjkxODAzLCJhdXRoX3RpbWUiOjE1MzI2MDkyOTEsIm5vbmNlIjoibm9uY2UiLCJhdF9oYXNoIjoibkpTT3drZW1BMEhlS2syVHlVVHJHQSIsImVtYWlsIjoibmlja0BtcGhhcm1hLmNvbSIsInByb2ZpbGUiOnsiaWQiOjUxLCJ1c2VybmFtZSI6Im5pY2tfbXV0dGkiLCJmaXJzdF9uYW1lIjoiTmljb2RlbXVzIiwibGFzdF9uYW1lIjoiTnV0c3VrcHVpIiwiZW1haWwiOiJuaWNrQG1waGFybWEuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjoiR0giLCJzY29wZXMiOlsiZmFjaWxpdGllcy5yZWFkIiwiZmFjaWxpdGllcy53cml0ZSIsImZhY2lsaXRpZXMuYWN0aXZhdGUiLCJob3NwaXRhbHMucmVhZCIsImhvc3BpdGFscy53cml0ZSIsImhvc3BpdGFscy5hY3RpdmF0ZSIsInVzZXJzLndyaXRlIiwicGF0aWVudHMucmVhZCIsInBhdGllbnRzLndyaXRlIiwicGF0aWVudHMuYWN0aXZhdGUiLCJwYXRpZW50X2VsaWdpYmlsaXR5LnJlYWQiLCJwYXRpZW50X2VsaWdpYmlsaXR5LndyaXRlIiwicGF5bWVudHMucmVjb3JkIiwicGF5bWVudHMucmVhZCIsInBheW1lbnRzLndyaXRlIiwiZHJ1Z3MucmVhZCIsImRydWdzLndyaXRlIiwiZGlhZ25vc2lzLnJlYWQiLCJkaWFnbm9zaXMud3JpdGUiLCJ1c2Vycy5yZWFkIiwibXBoYXJtYV9vb3BfYWRtaW4iXX19.fZPm68wGhpgB2XQ92i"
# # token = "eyJhbGciOiJSUzI1NiIsImtpZCI6ImE1OGM4MzVjY2YyNjYwZTRiZjEwY2M3ZjdkMzQ2NTY3In0.eyJpc3MiOiJodHRwczovL2F1dGgubXBoYXJtYS5jb20iLCJzdWIiOiIxNzc0IiwiYXVkIjoiNzQ4MTc4IiwiZXhwIjoxNjc0MTMwNDM5LCJpYXQiOjE2NzI5MjA4MzksImF1dGhfdGltZSI6MTY0NjMxMTg4Niwibm9uY2UiOiJzZWxmLmNvZGUubm9uY2UiLCJhdF9oYXNoIjoiN0h6V1p4OGJINC1FeFNhaWsteEVSdyIsInByb2ZpbGUiOnsiaWQiOjE3NzQsInVzZXJuYW1lIjoiMDUwMTQyNzIwMiIsImZpcnN0X25hbWUiOiJLd2FtZSIsImxhc3RfbmFtZSI6IkFrdWFtb2FoLUJvYXRlbmciLCJlbWFpbCI6ImthYm9hdGVuZzE0QGdtYWlsLmNvbSIsImdlbmRlciI6Im1hbGUiLCJsb2NhdGlvbiI6bnVsbCwiZmFjaWxpdHlfaWQiOm51bGwsImlzX3N0YWZmIjpmYWxzZSwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwicGhvbmVfbnVtYmVyIjoiMDUwMTQyNzIwMiJ9fQ.S7Qs_xR5nw2ghr4emYxRXuxgZDsn-uePbGmSQms-xMzN90SsTSgttVCtME_2x_buJPN8TowksLY1xwh754j1gYBoLrD_-KUdq60rBq3SqaSWYCcc1tQYTYzytXou9YjbYo9lPNJi6MIj_jhmZbP7XLfycnTC8DXacI-eWyNcKSe"
staff_token = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6Ijc4MyIsImF1ZCI6IjMxNjYyMCIsImV4cCI6MTY3MTQ0NDMyNSwiaWF0IjoxNjcwMjM0NzI1LCJhdXRoX3RpbWUiOjE2MzIzMDY0MzYsIm5vbmNlIjoic2VsZi5jb2RlLm5vbmNlIiwiYXRfaGFzaCI6ImE3QnBSM1FLNkJhc0N0VEM4amFha0EiLCJwcm9maWxlIjp7ImlkIjo3ODMsInVzZXJuYW1lIjoiMDU0NjEwNzQ2NCIsImZpcnN0X25hbWUiOiJKYW5lIiwibGFzdF9uYW1lIjoiRG9lIiwiZW1haWwiOiJtdXBhdGlAZ21haWwuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjpudWxsLCJmYWNpbGl0eV9pZCI6bnVsbCwib3JnYW5pemF0aW9uX2lkIjpudWxsLCJpc19zdGFmZiI6dHJ1ZSwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwicGhvbmVfbnVtYmVyIjoiMDU0NjEwNzQ2NCJ9fQ.EdiJbq3hA1JpalhZJUSY9Scqe00wWvlkZWduTleBpR28pY7LmSXqw04C_Oo_wI2nJEsz-NQvQXAJGhddP-RFc22NB7WsEHyy1RVuWk2hSqEiVwFT_e5jMZmGG0XUYdbgPiSTkpBVOcha2ksRjwTl_apRDW9_u2pGH-J14aOI-Rs"
not_staff = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6Ijc4MyIsImF1ZCI6IjMxNjYyMCIsImV4cCI6MTY3MDYxNTkwNywiaWF0IjoxNjY5NDA2MzA3LCJhdXRoX3RpbWUiOjE2MzIzMDY0MzYsIm5vbmNlIjoic2VsZi5jb2RlLm5vbmNlIiwiYXRfaGFzaCI6ImhHeEVnMExhaktjSzR2Sm5JUDVXb2ciLCJwcm9maWxlIjp7ImlkIjo3ODMsInVzZXJuYW1lIjoiMDU0NjEwNzQ2NCIsImZpcnN0X25hbWUiOiJKYW5lIiwibGFzdF9uYW1lIjoiRG9lIiwiZW1haWwiOiJtdXBhdGlAZ21haWwuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjpudWxsLCJmYWNpbGl0eV9pZCI6bnVsbCwib3JnYW5pemF0aW9uX2lkIjpudWxsLCJpc19zdGFmZiI6ZmFsc2UsImlzX3N1cGVydXNlciI6ZmFsc2UsInBob25lX251bWJlciI6IjA1NDYxMDc0NjQifX0.EKa1eLAtSADjWXL45o4AOwGUmAv_HK1EizljLH0AhFyzO3DQNy_r-FvgpWc4XS-tEss0o_IbT6ilgnTiamvAJ0WPuZd-xMDbnQiX9L-JXUoBUbhNfnitzO42nbclqlxci23shcULaROZPKKAuTH1HsmTtw-36ZwOArGSw2L4OfI"
idToken = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6IjEzNDUiLCJhdWQiOiI2NjY0MjciLCJleHAiOjE2NzYzNzkwOTYsImlhdCI6MTY3NTE2OTQ5NiwiYXV0aF90aW1lIjoxNjc1MTY5NDk2LCJub25jZSI6InNlbGYuY29kZS5ub25jZSIsImF0X2hhc2giOiJObmdaUGF2UjJzQXJZUEVuaUxKWmdBIiwicHJvZmlsZSI6eyJpZCI6MTM0NSwidXNlcm5hbWUiOiJxdWFtZWpuciIsImZpcnN0X25hbWUiOiJLd2FtZSIsImxhc3RfbmFtZSI6IkFrdWFtb2FoLUJvYXRlbmciLCJlbWFpbCI6Imt3YW1lLmJvYXRlbmdAbXBoYXJtYS5jb20iLCJnZW5kZXIiOiJtYWxlIiwibG9jYXRpb24iOiJHSCIsImZhY2lsaXR5X2lkIjpudWxsLCJvcmdhbml6YXRpb25faWQiOm51bGwsImlzX3N0YWZmIjp0cnVlLCJpc19zdXBlcnVzZXIiOnRydWUsInBob25lX251bWJlciI6bnVsbH19.I-0d7nVKKLTOC7P00kv7WRGnq1mGL2xod683H82upepDDtoYs2agL0teea_itihKF2ifZx_nCF097nz9QIUOq1W1nT_-Ze_R8Sm9l93hY_YfBQT_RB7CB0RIkz0zshDItRUQjT8AdqSl5odj8JQvC4RRpFiXckXdMBr-qsfdRes"
# newToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhdXRoLXRlc3QubXBoYXJtYS5jb20iLCJzdWIiOiI1MSIsImF1ZCI6IjA5MTc1NiIsImV4cCI6MTUzMjc2MzgwMywiaWF0IjoxNTMyNjkxODAzLCJhdXRoX3RpbWUiOjE1MzI2MDkyOTEsIm5vbmNlIjoibm9uY2UiLCJhdF9oYXNoIjoibkpTT3drZW1BMEhlS2syVHlVVHJHQSIsImVtYWlsIjoibmlja0BtcGhhcm1hLmNvbSIsInByb2ZpbGUiOnsiaWQiOjUxLCJ1c2VybmFtZSI6Im5pY2tfbXV0dGkiLCJmaXJzdF9uYW1lIjoiTmljb2RlbXVzIiwibGFzdF9uYW1lIjoiTnV0c3VrcHVpIiwiZW1haWwiOiJuaWNrQG1waGFybWEuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjoiR0giLCJzY29wZXMiOlsiZmFjaWxpdGllcy5yZWFkIiwiZmFjaWxpdGllcy53cml0ZSIsImZhY2lsaXRpZXMuYWN0aXZhdGUiLCJob3NwaXRhbHMucmVhZCIsImhvc3BpdGFscy53cml0ZSIsImhvc3BpdGFscy5hY3RpdmF0ZSIsInVzZXJzLndyaXRlIiwicGF0aWVudHMucmVhZCIsInBhdGllbnRzLndyaXRlIiwicGF0aWVudHMuYWN0aXZhdGUiLCJwYXRpZW50X2VsaWdpYmlsaXR5LnJlYWQiLCJwYXRpZW50X2VsaWdpYmlsaXR5LndyaXRlIiwicGF5bWVudHMucmVjb3JkIiwicGF5bWVudHMucmVhZCIsInBheW1lbnRzLndyaXRlIiwiZHJ1Z3MucmVhZCIsImRydWdzLndyaXRlIiwiZGlhZ25vc2lzLnJlYWQiLCJkaWFnbm9zaXMud3JpdGUiLCJ1c2Vycy5yZWFkIiwibXBoYXJtYV9vb3BfYWRtaW4iLCJvcmRlcnMud3JpdGUiXX19.UxB1xxA73iRxPPC5o1MmsXsMmD7BL5pvl-ix5maY1cM"
# t = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6Ijc4MyIsImF1ZCI6IjMxNjYyMCIsImV4cCI6MTY3NjM5ODMyMiwiaWF0IjoxNjc1MTg4NzIyLCJhdXRoX3RpbWUiOjE2NzQ0ODg2MzYsIm5vbmNlIjoic2VsZi5jb2RlLm5vbmNlIiwiYXRfaGFzaCI6IjJ5S3hUbWpmaW5RN1I0djhaV1dlMHciLCJwcm9maWxlIjp7ImlkIjo3ODMsInVzZXJuYW1lIjoiMDU0NjEwNzQ2NCIsImZpcnN0X25hbWUiOiJKYW5lIiwibGFzdF9uYW1lIjoiRG9lIiwiZW1haWwiOiJtdXBhdGlAZ21haWwuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjpudWxsLCJmYWNpbGl0eV9pZCI6bnVsbCwib3JnYW5pemF0aW9uX2lkIjpudWxsLCJpc19zdGFmZiI6dHJ1ZSwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwicGhvbmVfbnVtYmVyIjoiMDU0NjEwNzQ2NCJ9fQ.SeB_ItpscW2UG57leCXfMFRbCGE-0GU2NBdBryAs4N2dcF7nCED0ASB3ejoDrX2FZ4yx1eRP1V7XeoVhYuEJEyo52w70pCzxfjnzB6QuVk9ibNrRWOBld5Og0jEaKJQH9xFMJAaceZyKuoszgkw55xGosM_Y5anFuCOVaYE3axw"
t = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6IjIzMCIsImF1ZCI6IjY2NjQyNyIsImV4cCI6MTY4MDc2NTE5MCwiaWF0IjoxNjc5NTU1NTkwLCJhdXRoX3RpbWUiOjE2Nzk1NTU1OTAsIm5vbmNlIjoic2VsZi5jb2RlLm5vbmNlIiwiYXRfaGFzaCI6ImE1Zkc0THlWYlc0NzU0VXdhWUJxR2ciLCJwcm9maWxlIjp7ImlkIjoyMzAsInVzZXJuYW1lIjoidWl0ZXN0ZXIiLCJmaXJzdF9uYW1lIjoiVUkiLCJsYXN0X25hbWUiOiJUZXN0ZXIiLCJlbWFpbCI6ImVzdGhlcm5ld21hbkBtcGhhcm1hLmNvbSIsImdlbmRlciI6Im1hbGUiLCJsb2NhdGlvbiI6IkdIIiwiZmFjaWxpdHlfaWQiOiI1ZTVlM2JhNTljMDcwZTAwNGVlNTUxODQiLCJvcmdhbml6YXRpb25faWQiOm51bGwsImlzX3N0YWZmIjpmYWxzZSwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwicGhvbmVfbnVtYmVyIjoiMDI0NjU3ODY2NCJ9fQ.JwCm_9fNFM-M86_RlGnThjnYeRAzKShLS4KFgvnaXktXfP41s7fPsDsngldM9khL_WBVJxNDn0vg3ipw9lyNTEQVG2BJ9CjCV8CJDZ96G_OXDQKdByDj5ziPcsBlYebY8yclWd44tzmHnlRADCFH4PXantuOHzUhdebuQNDkjnQ"
new = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6Ijc4MyIsImF1ZCI6IjMxNjYyMCIsImV4cCI6MTY4Mjk0MDQ0NSwiaWF0IjoxNjgxNzMwODQ1LCJhdXRoX3RpbWUiOjE2NzQ0ODg2MzYsIm5vbmNlIjoic2VsZi5jb2RlLm5vbmNlIiwiYXRfaGFzaCI6ImNIVU42ejZ2WDZoVVZIekRPb3VCQ0EiLCJwcm9maWxlIjp7ImlkIjo3ODMsInVzZXJuYW1lIjoiMDU0NjEwNzQ2NCIsImZpcnN0X25hbWUiOiJKYW5lIiwibGFzdF9uYW1lIjoiRG9lIiwiZW1haWwiOiJtdXBhdGlAZ21haWwuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjpudWxsLCJmYWNpbGl0eV9pZCI6bnVsbCwib3JnYW5pemF0aW9uX2lkIjpudWxsLCJpc19zdGFmZiI6dHJ1ZSwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwicGhvbmVfbnVtYmVyIjoiMDU0NjEwNzQ2NCJ9fQ.XOSSmgcm7Rg4xi5i_uCU7pYvqy9K-1MMZPjPAxF6T4EM5a6LR5Lzq_rSVgC4Xs3cFnQ0TcMDLZg6RhiecFjqd4GeDLpe43CO7LsXRV7VtOp8lv4mVOaiO0i6VWXdBO7kyJorCHKEuqhf-unQgMtM3V8xKerRHXicJ7nEmMMDTsU"
joy = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6IjY1MSIsImF1ZCI6IjY2NjQyNyIsImV4cCI6MTY4MzExMzI4OSwiaWF0IjoxNjgxOTAzNjg5LCJhdXRoX3RpbWUiOjE2ODE5MDM2ODksIm5vbmNlIjoic2VsZi5jb2RlLm5vbmNlIiwiYXRfaGFzaCI6IkJUdy1KcGxpWjRtc0RvdkVvbUZDbVEiLCJwcm9maWxlIjp7ImlkIjo2NTEsInVzZXJuYW1lIjoiYmxvb21fYWRtaW5fbmciLCJmaXJzdF9uYW1lIjoiQmxvb20iLCJsYXN0X25hbWUiOiJVc2VyIiwiZW1haWwiOiJwZXJjeUBtcGhhcm1hLmNvbSIsImdlbmRlciI6Im1hbGUiLCJsb2NhdGlvbiI6Ik5HIiwiZmFjaWxpdHlfaWQiOm51bGwsIm9yZ2FuaXphdGlvbl9pZCI6bnVsbCwiaXNfc3RhZmYiOnRydWUsImlzX3N1cGVydXNlciI6ZmFsc2UsInBob25lX251bWJlciI6IjkwMjM0ODk4OTM0In19.rwgHSjoPTAtZan0E3icw78XF4NWVHsLc7OX6bSxGp7ktC7trLijRGkyp3PVO51p115zQdm36uE3ld3f1LriGQxGgJnCtbsv-w3qNK2AAjrJEXtfnmc8-wlY_DkQtwEXn9caF-smSX0b__Zbnl9VgNNmrvkP3rDty_Qj2QlnvejU"
yy = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6Ijc4MyIsImF1ZCI6IjMxNjYyMCIsImV4cCI6MTY4MzAyNTY0NiwiaWF0IjoxNjgxODE2MDQ2LCJhdXRoX3RpbWUiOjE2NzQ0ODg2MzYsIm5vbmNlIjoic2VsZi5jb2RlLm5vbmNlIiwiYXRfaGFzaCI6IlB1ZlVySFhJcGNLZW9tbDYzcTJlQ0EiLCJwcm9maWxlIjp7ImlkIjo3ODMsInVzZXJuYW1lIjoiMDU0NjEwNzQ2NCIsImZpcnN0X25hbWUiOiJKYW5lIiwibGFzdF9uYW1lIjoiRG9lIiwiZW1haWwiOiJtdXBhdGlAZ21haWwuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjpudWxsLCJmYWNpbGl0eV9pZCI6bnVsbCwib3JnYW5pemF0aW9uX2lkIjpudWxsLCJpc19zdGFmZiI6dHJ1ZSwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwicGhvbmVfbnVtYmVyIjoiMDU0NjEwNzQ2NCJ9fQ.ldtFpbyOay5AUIt-EDKkKndaOBfFIIGknX1f-v5_cOnMlKpw1AewO6F8w-38qpW4gItVWKoZ6CKZMSSRWeXg1f6pnKgUmCksbprnkdv9rgMwRFzNc0nmdze5moZ0rtqSzXiJEsJKBqzZyr5GQY_weUNtvZ2q6Ni7y_ovKrbtfGI"
yes = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6Ijc4MyIsImF1ZCI6IjMxNjYyMCIsImV4cCI6MTY5Mjc4ODY0NiwiaWF0IjoxNjkxNTc5MDQ2LCJhdXRoX3RpbWUiOjE2NzQ0ODg2MzYsIm5vbmNlIjoic2VsZi5jb2RlLm5vbmNlIiwiYXRfaGFzaCI6IkQ5c1V5cGY1MnpQMFVUaGpveWxSYUEiLCJwcm9maWxlIjp7ImlkIjo3ODMsInVzZXJuYW1lIjoiMDU0NjEwNzQ2NCIsImZpcnN0X25hbWUiOiJKYW5lIiwibGFzdF9uYW1lIjoiRG9lIiwiZW1haWwiOiJtdXBhdGlAZ21haWwuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjpudWxsLCJmYWNpbGl0eV9pZCI6bnVsbCwib3JnYW5pemF0aW9uX2lkIjpudWxsLCJpc19zdGFmZiI6dHJ1ZSwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwicGhvbmVfbnVtYmVyIjoiMDU0NjEwNzQ2NCJ9fQ.jeYdzZE3DQhNn0aJGLqod0G8jXMQfSGXTASf3qtu0QJwxmt9L2ZqEhnuOVv_7Rh5g52eIdBRgs9olST0hwRy_p2ZCtTBoLt9peRDlpZbOe4u2bWMsS1xR7CD0X0JwEaTplozi-sItTDRMurfCTevZ-brp5t8wDWonY17VKi93Ro"
decoded_jwt = jwt.decode(yes, options={"verify_signature": False})
# code = {"message":"Hello World"}
print(decoded_jwt["profile"]["phone_number"])

# decoded_jwt.get("profile")["phone_number"] = "020123456"

# modified_jwt = jwt.encode(decoded_jwt, '')
# print(modified_jwt)


# decoded_jwt = jwt.decode(modified_jwt, options={"verify_signature": False})
# print(decoded_jwt)
# eyJhbGciOiJSUzI1NiIsImtpZCI6IjMyZDQ4OTIzMDM5ZjIxODU5MmVmNWVlZjQ2NjViZjk5In0.eyJpc3MiOiJodHRwczovL2F1dGgudGVzdC5tcGhhcm1hLmNvbSIsInN1YiI6IjEzNDUiLCJhdWQiOiI2NjY0MjciLCJleHAiOjE2NzYzNzkwOTYsImlhdCI6MTY3NTE2OTQ5NiwiYXV0aF90aW1lIjoxNjc1MTY5NDk2LCJub25jZSI6InNlbGYuY29kZS5ub25jZSIsImF0X2hhc2giOiJObmdaUGF2UjJzQXJZUEVuaUxKWmdBIiwicHJvZmlsZSI6eyJpZCI6MTM0NSwidXNlcm5hbWUiOiJxdWFtZWpuciIsImZpcnN0X25hbWUiOiJLd2FtZSIsImxhc3RfbmFtZSI6IkFrdWFtb2FoLUJvYXRlbmciLCJlbWFpbCI6Imt3YW1lLmJvYXRlbmdAbXBoYXJtYS5jb20iLCJnZW5kZXIiOiJtYWxlIiwibG9jYXRpb24iOiJHSCIsImZhY2lsaXR5X2lkIjpudWxsLCJvcmdhbml6YXRpb25faWQiOm51bGwsImlzX3N0YWZmIjp0cnVlLCJpc19zdXBlcnVzZXIiOnRydWUsInBob25lX251bWJlciI6bnVsbH19.I-0d7nVKKLTOC7P00kv7WRGnq1mGL2xod683H82upepDDtoYs2agL0teea_itihKF2ifZx_nCF097nz9QIUOq1W1nT_-Ze_R8Sm9l93hY_YfBQT_RB7CB0RIkz0zshDItRUQjT8AdqSl5odj8JQvC4RRpFiXckXdMBr-qsfdRes

# #     return len(token) == True 

# # func validate(token string) bool {
# #     return len(token) == true
    
# # }
# # print("Hello world")

# eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhdXRoLXRlc3QubXBoYXJtYS5jb20iLCJzdWIiOiI1MSIsImF1ZCI6IjA5MTc1NiIsImV4cCI6MTUzMjc2MzgwMywiaWF0IjoxNTMyNjkxODAzLCJhdXRoX3RpbWUiOjE1MzI2MDkyOTEsIm5vbmNlIjoibm9uY2UiLCJhdF9oYXNoIjoibkpTT3drZW1BMEhlS2syVHlVVHJHQSIsImVtYWlsIjoibmlja0BtcGhhcm1hLmNvbSIsInByb2ZpbGUiOnsiaWQiOjUxLCJ1c2VybmFtZSI6Im5pY2tfbXV0dGkiLCJmaXJzdF9uYW1lIjoiTmljb2RlbXVzIiwibGFzdF9uYW1lIjoiTnV0c3VrcHVpIiwiZW1haWwiOiJuaWNrQG1waGFybWEuY29tIiwiZ2VuZGVyIjoibWFsZSIsImxvY2F0aW9uIjoiR0giLCJzY29wZXMiOlsiZmFjaWxpdGllcy5yZWFkIiwiZmFjaWxpdGllcy53cml0ZSIsImZhY2lsaXRpZXMuYWN0aXZhdGUiLCJob3NwaXRhbHMucmVhZCIsImhvc3BpdGFscy53cml0ZSIsImhvc3BpdGFscy5hY3RpdmF0ZSIsInVzZXJzLndyaXRlIiwicGF0aWVudHMucmVhZCIsInBhdGllbnRzLndyaXRlIiwicGF0aWVudHMuYWN0aXZhdGUiLCJwYXRpZW50X2VsaWdpYmlsaXR5LnJlYWQiLCJwYXRpZW50X2VsaWdpYmlsaXR5LndyaXRlIiwicGF5bWVudHMucmVjb3JkIiwicGF5bWVudHMucmVhZCIsInBheW1lbnRzLndyaXRlIiwiZHJ1Z3MucmVhZCIsImRydWdzLndyaXRlIiwiZGlhZ25vc2lzLnJlYWQiLCJkaWFnbm9zaXMud3JpdGUiLCJ1c2Vycy5yZWFkIiwibXBoYXJtYV9vb3BfYWRtaW4iXX19.fZPm68wGhpgB2XQ92i
# print("Hello world")
# func validate(token string) bool {
#    if len(token) == true {
#        return true
#    } 
#    return false 
# }
# func validateJson(model interface{}){
#     return validator.New{}.Struct(model)
# }

# import zlib
# from base64 import urlsafe_b64encode as b64e, urlsafe_b64decode as b64d

# def obscure(data: str) -> str:
#     data = data.encode()
#     return b64e(zlib.compress(data, 9)).decode()

# def unobscure(obscured: str) -> str:
#     obscured = obscured.encode()
#     return zlib.decompress(b64d(obscured)).decode()

# obs = obscure("3457960")
# print(obs)
# unobs = unobscure(obs)
# print(unobs)


# from hashids import Hashids

# key = Fernet.generate_key().decode()
# print(key)

# key = "cqpIohijHP9-KRiAMprCV_l_IvR-AWmMWMy86fD7OYA="
# prod_key = "I7wnjNE0pWyp9sOPXwH21DE09SkA5e8NxLm5iPLNEe0="

# hashid = Hashids(key, min_length=8)
# enc = hashid.encode(54739)
# print(type(enc))
# dec = hashid.decode(enc)
# print(enc, type(dec[0]))

# def decode_id(encoded_data: str) -> str:
#     # key = settings.ENCRYPTION_KEY
#     hashid = Hashids(key, min_length=8)
#     decoded_id = hashid.decode(encoded_data)[0]
#     result = str(decoded_id)
#     return result

# print(type(decode_id(None)))
# import urllib.parse
# import requests
# import re



# # original_url = "http://mpayment-proxy/payment-service/promo-codes-admin/?page=2"

# # url = "https://api.test.mpharma.com/inventory-bff/promo-codes-admin/23/?page=2&line=3"

# base_url = "http://payments-ms/payment-service/"

# res = requests.get("https://9cd533c1-854a-4a7f-8438-12e4d14241e5.mock.pstmn.io/inventory-bfff/promo-codes-admin/")
# print(res.request.headers)
# original_url = res.json()['next']
# print("Original URL", original_url)
# urlparse = urllib.parse.urlparse(original_url)

# new_url = f"{base_url}?{urlparse.query}"
# # print("New URL", new_url)

# print(re.sub(r".*(?=\?)", base_url, original_url, count=1))
# o = urllib.parse.urlparse(url)
# print(f"{base_url}{o.query}")
# print(urllib.parse.urlunparse(0))